openapi: 3.1.0
info:
  contact: {}
  title: Marketplace
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
    Peer-to-peer NFT marketplaces like OpenSea allow users to create NFTs with metadata (pictures, videos, songs, 3D art, etc.) and post listings to sell them to one another. OpenSea then takes a percentage of each sale. 
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
  - description: >
    name: Market listing
  - description: >
    name: Fee management
paths:
  /v3/blockchain/marketplace/listing:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Deploy new smart contract for NFT marketplace logic. Smart contract enables marketplace operator to create new listing for NFT (ERC-721/1155).
        Operator can set a fee in percentage, which will be paid on top of the price of the asset.
        Listing can be offered for native asset - ETH, BSC, etc. - or any ERC20 token - this is configurable during listing creation.
        Once the listing is created, seller must send the NFT asset to the smart contract.
        Buyer will buy the asset from the listing using native asset - send assets along the buyAssetFromListing() smart contract call, or via ERC20 token.
        Buyer of the listing must perform approval for the smart contract to access ERC20 token, before the actual buyAssetFromListing() method is called.
        Once both assets - from buyer and seller - are in the smart contract, NFT is sent to the buyer, price is sent to the seller
        and marketplace fee is set to the operator.<br/>
        This operation deploys a smart contract on the blockchain.<br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Klaytn</li>
        <li>Celo</li>
        <li>Polygon (Matic)</li>
        </ul>
        </p>
      operationId: GenerateMarketplace
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Address of the recipient of the fee for the trade.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - feeRecipient
                    - chain
                    - marketplaceFee
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Address of the recipient of the fee for the trade.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - feeRecipient
                    - chain
                    - marketplaceFee
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Address of the recipient of the fee for the trade.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - feeRecipient
                    - marketplaceFee
                    - chain
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Address of the recipient of the fee for the trade.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - feeRecipient
                    - marketplaceFee
                    - chain
                    - feeCurrency
                    - signatureId
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Create NFT Marketplace
      tags:
        - Market listing
  /v3/blockchain/marketplace/listing/sell:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Create new listing on the marketplace. Only marketplace operator can establish those on behalf of the seller of the NFT.
        After listing is created, seller must approve the asset for spending to the marketplace smart contract.
        Only listing for existing NFTs can be created - seller must be owner of the NFT asset.<br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Celo</li>
        <li>Klaytn</li>
        <li>Polygon (Matic)</li>
        </ul>
        *Note:
        In the new tatum ERC721 smart contract, we have added an option for the author to set royalties on every transfer and in any currency.
        To make it backwards compatible with the previous logic we have added a check to see if you are using the new or old version.
        If you are using older version of the marketplace/auction, you may notice a warning in the explorer which says:
        "Although one or more Error Occurred [execution reverted] Contract Execution Completed"

        You can ignore the above warning, this has no impact on the functionality and is a response of internal transaction
        </p>
      operationId: SellAssetOnMarketplace
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    nftAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the NFT asset to sell smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    seller:
                      maxLength: 42
                      minLength: 42
                      description: Address of the seller of the NFT asset.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: 'Amount of the assets to be sent. For ERC-721 tokens, enter amount only in case of native currency cashback.'
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    tokenId:
                      description: 'ID of token, if transaction is for ERC-721 or ERC-1155.'
                      example: '100000'
                      type: string
                      maxLength: 256
                    price:
                      description: Price of the asset to sell. Marketplace fee will be obtained on top of this price.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    isErc721:
                      type: boolean
                      description: 'True if asset is NFT of type ERC721, false if ERC1155.'
                      example: true
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - contractAddress
                    - tokenId
                    - isErc721
                    - listingId
                    - seller
                    - price
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    nftAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the NFT asset to sell smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    seller:
                      maxLength: 42
                      minLength: 42
                      description: Address of the seller of the NFT asset.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: 'Amount of the assets to be sent. For ERC-721 tokens, enter amount only in case of natiev currency cashback.'
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    tokenId:
                      description: 'ID of token, if transaction is for ERC-721 or ERC-1155.'
                      example: '100000'
                      type: string
                      maxLength: 256
                    price:
                      description: Price of the asset to sell. Marketplace fee will be obtained on top of this price.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    isErc721:
                      type: boolean
                      description: 'True if asset is NFT of type ERC721, false if ERC1155.'
                      example: true
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - contractAddress
                    - tokenId
                    - isErc721
                    - listingId
                    - seller
                    - price
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    nftAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the NFT asset to sell smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    seller:
                      maxLength: 42
                      minLength: 42
                      description: Address of the seller of the NFT asset.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: 'Amount of the assets to be sent. For ERC-721 tokens, enter amount only in case of native currency cashback.'
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    tokenId:
                      description: 'ID of token, if transaction is for ERC-721 or ERC-1155.'
                      example: '100000'
                      type: string
                      maxLength: 256
                    price:
                      description: Price of the asset to sell. Marketplace fee will be obtained on top of this price.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    isErc721:
                      type: boolean
                      description: 'True if asset is NFT of type ERC721, false if ERC1155.'
                      example: true
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - contractAddress
                    - tokenId
                    - isErc721
                    - listingId
                    - seller
                    - price
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    nftAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the NFT asset to sell smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    seller:
                      maxLength: 42
                      minLength: 42
                      description: Address of the seller of the NFT asset.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: 'Amount of the assets to be sent. For ERC-721 tokens, enter amount only in case of natiev currency cashback.'
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    tokenId:
                      description: 'ID of token, if transaction is for ERC-721 or ERC-1155.'
                      example: '100000'
                      type: string
                      maxLength: 256
                    price:
                      description: Price of the asset to sell. Marketplace fee will be obtained on top of this price.
                      example: '100000'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    isErc721:
                      type: boolean
                      description: 'True if asset is NFT of type ERC721, false if ERC1155.'
                      example: true
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - contractAddress
                    - tokenId
                    - isErc721
                    - listingId
                    - seller
                    - price
                    - feeCurrency
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: Signature
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Sell asset on the NFT Marketplace
      tags:
        - Market listing
  /v3/blockchain/marketplace/listing/buy:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Buy listing on the marketplace. Buyer must either send native assets with this operation, or approve ERC20 token spending before using <a href="#operation/Erc20Approve">Approve spending for marketplace.</a><br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Celo</li>
        <li>Klaytn</li>
        <li>Polygon (Matic)</li>
        </ul>
        *Note:
        In the new tatum ERC721 smart contract, we have added an option for the author to set royalties on every transfer and in any currency.
        To make it backwards compatible with the previous logic we have added a check to see if you are using the new or old version.
        If you are using older version of the marketplace/auction, you may notice a warning in the explorer which says:
        "Although one or more Error Occurred [execution reverted] Contract Execution Completed"

        You can ignore the above warning, this has no impact on the functionality and is a response of internal transaction
        </p>
      operationId: BuyAssetOnMarketplace
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    buyer:
                      maxLength: 42
                      minLength: 42
                      description: 'In case of the ERC20 listing, it''s possible to buy on behalf of someone else. This value is the address of the buyer, which should approve spending of the ERC20 tokens for the Marketplace contract. This could be used for a buying from the custodial wallet address.'
                      example: '0x587422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing.
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: Amount of the assets to be sent for buying.
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - amount
                    - fromPrivateKey
                - type: object
                  title: SignatureId
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    buyer:
                      maxLength: 42
                      minLength: 42
                      description: 'In case of the ERC20 listing, it''s possible to buy on behalf of someone else. This value is the address of the buyer, which should approve spending of the ERC20 tokens for the Marketplace contract. This could be used for a buying from the custodial wallet address.'
                      example: '0x587422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing.
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: Amount of the assets to be sent for buying.
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - listingId
                    - amount
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing.
                      minLength: 1
                      maxLength: 200
                    buyer:
                      maxLength: 42
                      minLength: 42
                      description: 'In case of the ERC20 listing, it''s possible to buy on behalf of someone else. This value is the address of the buyer, which should approve spending of the ERC20 tokens for the Marketplace contract. This could be used for a buying from the custodial wallet address.'
                      example: '0x587422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: Amount of the assets to be sent for buying.
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - amount
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - SignatureId
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    buyer:
                      maxLength: 42
                      minLength: 42
                      description: 'In case of the ERC20 listing, it''s possible to buy on behalf of someone else. This value is the address of the buyer, which should approve spending of the ERC20 tokens for the Marketplace contract. This could be used for a buying from the custodial wallet address.'
                      example: '0x587422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing.
                      minLength: 1
                      maxLength: 200
                    amount:
                      description: Amount of the assets to be sent for buying.
                      example: '1'
                      pattern: '^[+]?((\d+(\.\d*)?)|(\.\d+))$'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - amount
                    - feeCurrency
                    - signatureId
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Buy asset on the NFT Marketplace
      tags:
        - Market listing
  /v3/blockchain/marketplace/listing/cancel:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Cancel listing on the marketplace. Only possible for the seller or the operator.
        There must be no buyer present for that listing. NFT asset is sent back to the seller.<br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Celo</li>
        <li>Klaytn</li>
        <li>Polygon (Matic)</li>
        </ul>
        *Note:
        In the new tatum ERC721 smart contract, we have added an option for the author to set royalties on every transfer and in any currency.
        To make it backwards compatible with the previous logic we have added a check to see if you are using the new or old version.
        If you are using older version of the marketplace/auction, you may notice a warning in the explorer which says:
        "Although one or more Error Occurred [execution reverted] Contract Execution Completed"

        You can ignore the above warning, this has no impact on the functionality and is a response of internal transaction
        </p>
      operationId: CancelSellMarketplaceListing
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - fromPrivateKey
                - type: object
                  title: SignatureId
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - listingId
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    erc20Address:
                      maxLength: 42
                      minLength: 42
                      description: 'Optional address of the ERC20 token, which will be used as a selling currency of the NFT.'
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    listingId:
                      type: string
                      description: ID of the listing. It's up to the developer to generate unique ID
                      minLength: 1
                      maxLength: 200
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - listingId
                    - feeCurrency
                    - signatureId
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: Signature
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Cancel selling of the asset on the NFT Marketplace
      tags:
        - Market listing
  '/v3/blockchain/marketplace/listing/{chain}/{contractAddress}/{type}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get list of listings in this marketplace.</p>
      operationId: GetMarketplaceListings
      parameters:
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - CELO
        - description: Contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc4'
        - description: Listing ID
          in: path
          name: type
          required: true
          schema:
            type: string
            example: INITIATED
            enum:
              - INITIATED
              - SOLD
              - CANCELLED
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: ID of the listing.
                  example: '12345'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get open/cancelled/sold listings from the NFT Marketplace
      tags:
        - Market listing
  '/v3/blockchain/marketplace/listing/{chain}/{contractAddress}/listing/{id}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get detail of the specific listing.</p>
      operationId: GetMarketplaceListing
      parameters:
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - ONE
              - KLAY
              - CELO
              - MATIC
              - BSC
        - description: Contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc4'
        - description: Listing ID
          in: path
          name: id
          required: true
          schema:
            type: string
            example: '123456'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: string
                    description: Amount of NFTs to sold in this listing. Valid only for ERC1155 listings.
                    example: '1'
                  buyer:
                    type: string
                    description: 'Address of the buyer, if exists.'
                    example: '0xc21C81ef03f98898Fb155E00C364e8a7b9D158b8'
                  erc20Address:
                    type: string
                    description: 'Address of the ERC20 token smart contract, which should be used for paying for the asset..'
                    example: '0xc21C81ef03f98898Fb155E00C364e8a7b9D158b8'
                  isErc721:
                    type: boolean
                    description: If the listing is for ERC721 or ERC1155 token.
                    example: true
                  listingId:
                    type: string
                    description: ID of the listing.
                    example: '12345'
                  nftAddress:
                    type: string
                    description: Address of the NFT smart contract.
                    example: '0xc21C81ef03f98898Fb155E00C364e8a7b9D158b8'
                  price:
                    type: string
                    description: Price of the NFT asset in native currency or ERC20 token based on the presence of erc20Address field.
                    example: '1.234'
                  seller:
                    type: string
                    description: Address of the seller.
                    example: '0xc21C81ef03f98898Fb155E00C364e8a7b9D158b8'
                  state:
                    type: string
                    description: 'State of the listing. 0 - available, 1-1sold, 2 - cancelled'
                    enum:
                      - '0'
                      - '1'
                      - '2'
                    example: '1'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get listing from the NFT Marketplace
      tags:
        - Market listing
  '/v3/blockchain/marketplace/listing/{chain}/{contractAddress}/fee':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get fee of the marketplace.</p>
      operationId: GetMarketplaceFee
      parameters:
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - ONE
              - KLAY
              - CELO
              - MATIC
              - BSC
        - description: Contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc4'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: number
                description: Fee in percents.
                example: 2.25
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get NFT Marketplace fee
      tags:
        - Fee management
  '/v3/blockchain/marketplace/listing/{chain}/{contractAddress}/recipient':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get fee recipient of the marketplace.</p>
      operationId: GetMarketplaceFeeRecipient
      parameters:
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - ONE
              - KLAY
              - CELO
              - MATIC
              - BSC
        - description: Contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc4'
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    description: Address of the marketplace fee recipient.
                    example: '0xe6e7340394958674cdf8606936d292f565e4ecc4'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Get NFT Marketplace fee recipient
      tags:
        - Fee management
  /v3/blockchain/marketplace/listing/recipient:
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Update fee recipient of the marketplace.<br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Celo</li>
        <li>Polygon (Matic)</li>
        </ul>
        </p>
      operationId: UpdateFeeRecipient
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Recipient address of the marketplace fee.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - feeRecipient
                    - fromPrivateKey
                - type: object
                  title: SignatureId
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Recipient address of the marketplace fee.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - feeRecipient
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Recipient address of the marketplace fee.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - feeRecipient
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    feeRecipient:
                      maxLength: 42
                      minLength: 42
                      description: Recipient address of the marketplace fee.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - feeRecipient
                    - feeCurrency
                    - signatureId
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Update NFT Marketplace fee recipient
      tags:
        - Fee management
  /v3/blockchain/marketplace/listing/fee:
    put:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Update fee of the marketplace.<br/>
        Supported blockchains:
        <ul>
        <li>Binance Smart Chain</li>
        <li>Harmony.ONE</li>
        <li>Ethereum</li>
        <li>Celo</li>
        <li>Polygon (Matic)</li>
        </ul>
        </p>
      operationId: UpdateFee
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of the marketplace smart contract.
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - marketplaceFee
                    - fromPrivateKey
                - type: object
                  title: SignatureId
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - ETH
                        - ONE
                        - KLAY
                        - BSC
                        - MATIC
                      example: ETH
                      type: string
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - nftAddress
                    - chain
                    - marketplaceFee
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - marketplaceFee
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      description: Blockchain to work with.
                      enum:
                        - CELO
                      example: CELO
                      type: string
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                    marketplaceFee:
                      type: number
                      description: Percentage of the selling amount of the NFT asset. 100 - 1%
                      example: 150
                      minimum: 0
                      maximum: 10000
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - chain
                    - contractAddress
                    - marketplaceFee
                    - feeCurrency
                    - signatureId
        required: true
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to perform the required operation due to a logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server while processing the request.
      security:
        - X-Api-Key: []
      summary: Update NFT Marketplace fee
      tags:
        - Fee management
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey