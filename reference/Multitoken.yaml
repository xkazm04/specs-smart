openapi: 3.1.0
info:
  contact: {}
  title: Multitoken
  version: 3.9.4
  x-logo:
    url: 'https://tatum.io/images/logo.svg'
    altText: Tatum
  description: |-
                <p>Multi Token (ERC-1155|) is a type of contract where multiple NFT or "non-fungible token" can be deployed with FT "Fungible Tokens". Non-fungible means that each token is unique and irreplaceable while Fungible tokens are tokens that have same value. This principle gives Multi Token their value and gives rise to a wide range of interesting potential use cases.<br/>
                Multi Tokens can be used for nearly any digital asset or good to ensure authenticity and scarcity. The possibilities are endless, but here are a few example use cases:
                <ul>
                <li><b>In-game assets</b> - Multi Tokens can be used to create unique collectibles in the form of characters, weapons, skins, or other equipment. Players can resell or trade assets directly as they choose, and their authenticity is easily verifiable. No more eBay, no more scammers.</li>
                <li><b>Music and other digital media</b> - Multi Tokens can be used to create rare and unique collectible digital releases. Similarly, NFTs can be used to sell videos, art, or any other type of digital media. Collectors can own digital originals of their favorite songs, movies, or virtually anything else you can imagine.</li>
                <li><b>Digital sports merch</b> - Trading cards, memorabilia, classic moments in sports history, and one-of-a-kind experiences can also be sold as NFTs, opening up a world of possibilities for sports leagues and teams worldwide. The NBA Top Shot website sells collectible “moments” from the league’s history, and at the time of writing, the website is completely sold out and closed for new sign-ups.</li>
                <br/>
                These endpoints wraps up standard Multi Token implementation and operations, which can be done with them. Endpoints are blockchain agnostic, the only differentatior is the <b>chain</b> parameter in the URL path.<br/><br/>
                Tatum now supports Multi Token on these blockchains:<br/>
                <ul>
                <li><b>Ethereum</b></li>
                <li><b>Polygon (Matic)</b></li>
                <li><b>Kcs (KCS)</b></li>
                <li><b>Celo</b></li>
                <li><b>Harmony.ONE</b></li>
                <li><b>Klaytn</b></li>
                <li><b>Binance Smart Chain</b></li>
                <li><b>Algorand</b></li>
                </ul>
                </p>
servers:
  - url: 'https://api-eu1.tatum.io'
  - url: 'https://api-us-west1.tatum.io'
tags:
      - description: ''
        name: Token operations 
      - description: ''
        name: Batch operations 
      - description: ''
        name: Get information
paths:
  /v3/multitoken/deploy:
    post:
      description: |
        <p>Deploy Multi Token Smart Contract. This method creates new ERC1155 Smart Contract (Multi Tokens) on the blockchain. Smart contract is standardized and audited.
        It is possible to mint, burn and transfer tokens. It is also possible to mint multiple tokens at once.<br/>
        Tatum now supports Multi Tokens on these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Binance Smart Chain</b></li>
        </ul>

        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: DeployMultiToken
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    uri:
                      description: URI of the Multi Token token
                      example: example.com
                      type: string
                    fromPrivateKey:
                      description: 'Private key of account address, from which gas for deployment of ERC1155 will be paid. Private key, or signature Id must be present.'
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                    publicMint:
                      description: True if the contract is publicMint type
                      example: true
                      type: boolean
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - uri
                    - chain
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    uri:
                      description: URI of the Multi Token token
                      example: example.com
                      type: string
                    publicMint:
                      description: True if the contract is publicMint type
                      example: true
                      type: boolean
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - uri
                    - chain
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    uri:
                      description: URI of the Multi Token contract
                      example: example.com
                      maxLength: 100
                      minLength: 1
                      type: string
                    publicMint:
                      description: True if the contract is publicMint type
                      example: true
                      type: boolean
                    fromPrivateKey:
                      description: 'Private key of account address, from which gas for deployment of ERC1155 will be paid. Private key, or signature Id must be present.'
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - uri
                    - feeCurrency
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    uri:
                      description: URI of the Multi Token contract
                      example: example.com
                      maxLength: 100
                      minLength: 1
                      type: string
                    publicMint:
                      description: True if the contract is publicMint type
                      example: true
                      type: boolean
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - uri
                    - feeCurrency
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      message:
                        example: Forbidden
                        description: Forbidden
                        type: string
                      statusCode:
                        example: 403
                        description: '403'
                        type: number
                    required:
                      - statusCode
                      - message
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Deploy Multi Token Smart Contract.
      tags:
        - Token operations
  /v3/multitoken/mint:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Mint a fixed amount of Multi Token and transfer it to destination account. Create and transfer any Multi Token token from smart contract defined in contractAddress.
        It is possible to add Metadata to the created token with a more detailed information about it.<br/><br/>
        Tatum now supports Multi Token these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Binance Smart Chain</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Algorand</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: MintMultiToken
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                        - ALGO
                    tokenId:
                      description: ID of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    to:
                      maxLength: 58
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 1
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: amount of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - url
                    - contractAddress
                    - fromPrivateKey
                    - tokenId
                    - amount
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    tokenId:
                      description: ID of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    amount:
                      description: amount of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - url
                    - contractAddress
                    - signatureId
                    - tokenId
                    - amount
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    tokenId:
                      description: ID of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    amount:
                      description: amount of token to be created.
                      example: '100000'
                      type: string
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - tokenId
                    - amount
                    - feeCurrency
                    - contractAddress
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    tokenId:
                      description: ID of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    amount:
                      description: amount of token to be created.
                      example: '100000'
                      type: string
                      maxLength: 32
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - tokenId
                    - amount
                    - feeCurrency
                    - contractAddress
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Mint Multi Token
      tags:
        - Token operations
  /v3/multitoken/mint/batch:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Create a fixed amount of multiple Multi Tokens Tokens and transfer them to destination account in one transaction. Create and transfer Multi Tokens tokens from smart contract defined in contractAddress.<br/><br/>
        Tatum now supports Multi Tokens on these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Binance Smart Chain</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: MintMultiTokenBatch
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    to:
                      type: array
                      description: Blockchain address to send Multi Token token to.
                      example:
                        - '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      items:
                        maxLength: 42
                        minLength: 42
                        type: string
                    tokenId:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100000'
                          - '100001'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    amounts:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100'
                          - '100'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - url
                    - contractAddress
                    - fromPrivateKey
                    - tokenId
                    - amounts
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    to:
                      type: array
                      description: Blockchain address to send Multi Token token to.
                      example:
                        - '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      items:
                        maxLength: 42
                        minLength: 42
                        type: string
                    tokenId:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100000'
                          - '100001'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    amounts:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100'
                          - '100'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - contractAddress
                    - tokenId
                    - url
                    - signatureId
                    - amounts
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    tokenId:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100000'
                          - '100001'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    amounts:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100'
                          - '100'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example:
                        - '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: array
                      items:
                        type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - tokenId
                    - amounts
                    - feeCurrency
                    - contractAddress
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    to:
                      type: array
                      description: Blockchain address to send Multi Token token to.
                      example:
                        - '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      items:
                        maxLength: 42
                        minLength: 42
                        type: string
                    tokenId:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100000'
                          - '100001'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    amounts:
                      type: array
                      description: ID of token to be created.
                      example:
                        - - '100'
                          - '100'
                      items:
                        type: array
                        items:
                          type: string
                          maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - contractAddress
                    - feeCurrency
                    - tokenId
                    - amounts
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Mint Multi Token Batch
      tags:
        - Batch operations
  /v3/multitoken/burn:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Burn a fixed amount of Multi Tokens by id. This method destroys Multi Tokens from smart contract defined in contractAddress.<br/><br/>
        Tatum now supports Multi Token these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (Matic)</b></li>
        <li><b>Celo</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Binance Smart Chain</b></li>
        <li><b>Algorand</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: BurnMultiToken
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                        - ALGO
                    account:
                      maxLength: 58
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    contractAddress:
                      maxLength: 42
                      minLength: 1
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 103
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    amount:
                      description: amount of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - account
                    - chain
                    - contractAddress
                    - fromPrivateKey
                    - tokenId
                    - amount
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    amount:
                      description: amount of token to be destroyed.
                      example: '100'
                      type: string
                      maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - account
                    - chain
                    - amount
                    - contractAddress
                    - tokenId
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    amount:
                      description: amount of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - contractAddress
                    - feeCurrency
                    - fromPrivateKey
                    - tokenId
                    - amount
                    - account
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    amount:
                      description: amount of token to be destroyed.
                      example: '100000'
                      type: string
                      maxLength: 32
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - feeCurrency
                    - contractAddress
                    - tokenId
                    - amount
                    - signatureId
                    - account
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: Signature
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Burn Multi Token
      tags:
        - Token operations
  /v3/multitoken/burn/batch:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Burn multiple Multi Token Tokens by id assigned to same address in one transaction. This method destroys any Multi Tokens token from smart contract defined in contractAddress.<br/><br/>
        Tatum now supports Multi Tokens these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Binance Smart Chain</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: BurnMultiTokenBatch
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example:
                        - '1000'
                        - '1001'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    amounts:
                      description: ID of token to be destroyed.
                      example:
                        - '10'
                        - '10'
                      type: array
                      items:
                        type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - account
                    - amounts
                    - chain
                    - url
                    - contractAddress
                    - fromPrivateKey
                    - tokenId
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example:
                        - '100'
                        - '101'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    amounts:
                      description: ID of token to be destroyed.
                      example:
                        - '10'
                        - '10'
                      type: array
                      items:
                        type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - account
                    - chain
                    - amount
                    - contractAddress
                    - tokenId
                    - signatureId
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: ID of token to be destroyed.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    amounts:
                      description: amounts of token to be destroyed.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - contractAddress
                    - feeCurrency
                    - fromPrivateKey
                    - tokenId
                    - amounts
                    - account
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    account:
                      maxLength: 42
                      minLength: 42
                      description: Address of holder
                      example: '0x4b812a77b109A150C2Fc89eD133EaBC78bC9EC8f'
                      type: string
                    tokenId:
                      description: IDs of token to be destroyed.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    amounts:
                      description: amounts of token to be destroyed.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - feeCurrency
                    - contractAddress
                    - tokenId
                    - amount
                    - account
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: Signature
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Burn Multi Token Batch
      tags:
        - Batch operations
  /v3/multitoken/transaction:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Transfer a certain amount of Multi Token from account to another account. Transfer Multi Tokens token from smart contract defined in contractAddress.
        Only 1 specific token with specified tokenId and value can be transfered. This method invokes ERC1155 method safeTransfer() to transfer the token in case of ETH, Celo and BSC.<br/><br/>
        Tatum now supports Multi Token these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Binance Smart Chain</b></li>
        <li><b>Algorand</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: TransferMultiToken
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                        - ALGO
                    to:
                      maxLength: 58
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example: '100000'
                      type: string
                      maxLength: 256
                    amount:
                      description: amount of token.
                      example: '100000'
                      type: string
                      maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 1
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 103
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - contractAddress
                    - tokenId
                    - fromPrivateKey
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example: '100000'
                      type: string
                      maxLength: 256
                    amount:
                      description: Amount of token.
                      example: '100000'
                      type: string
                      maxLength: 256
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - contractAddress
                    - tokenId
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example: '100000'
                      type: string
                      maxLength: 256
                    amount:
                      description: amount of token.
                      example: '100000'
                      type: string
                      maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - contractAddress
                    - signatureId
                    - tokenId
                    - amount
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example: '100000'
                      type: string
                      maxLength: 256
                    amount:
                      description: amount of token.
                      example: '100000'
                      type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - contractAddress
                    - feeCurrency
                    - signatureId
                    - tokenId
                    - amount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Transfer Multi Token Token
      tags:
        - Token operations
  /v3/multitoken/transaction/batch:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Transfer Multi Token Batch from account to various other accounts in one transaction. Transfer multiple Multi Tokens token from smart contract defined in contractAddress.
        Multiple token with specified tokenIds and values can be transfered. This method invokes ERC1155 method safeTransfer() to transfer the token in case of ETH, Celo and BSC.<br/><br/>
        Tatum now supports Multi Tokens these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Binance Smart Chain</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: TransferMultiTokenBatch
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 256
                    amounts:
                      description: amounts of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - contractAddress
                    - tokenId
                    - amounts
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - ONE
                        - MATIC
                        - KCS
                        - KLAY
                        - BSC
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 256
                    amount:
                      description: amount of token.
                      example:
                        - '100000'
                      type: array
                      maxLength: 256
                      items:
                        type: string
                        maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                  required:
                    - to
                    - chain
                    - contractAddress
                    - signatureId
                    - tokenId
                    - amount
                - type: object
                  title: Celo - PrivateKey
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    amounts:
                      description: Amount of token to be transferred
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                        maxLength: 32
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - contractAddress
                    - tokenId
                    - amounts
                    - fromPrivateKey
                - type: object
                  title: Celo - Signature
                  properties:
                    chain:
                      type: string
                      example: CELO
                      description: Chain to work with.
                      enum:
                        - CELO
                    to:
                      maxLength: 42
                      minLength: 42
                      description: Blockchain address to send Multi Token token to
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    tokenId:
                      description: ID of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                    amounts:
                      description: amounts of token.
                      example:
                        - '100000'
                      type: array
                      items:
                        type: string
                    data:
                      description: Data in bytes
                      example: '0x1234'
                      type: string
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of Multi Token token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      example: 1
                      description: 'Nonce to be set to Celo transaction. If not present, last known nonce will be used.'
                    feeCurrency:
                      type: string
                      description: Currency to pay for transaction gas
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - to
                    - contractAddress
                    - feeCurrency
                    - signatureId
                    - tokenId
                    - amounts
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Transfer Multi Token Batch
      tags:
        - Batch operations
  /v3/multitoken/mint/add:
    post:
      description: |
        <h4>2 credits per API call.</h4><br/>
        <p>Add Multi Token minter.<br/><br/>
        Tatum now supports Multi Tokens these blockchains:<br/>
        <ul>
        <li><b>Ethereum</b></li>
        <li><b>Polygon (Matic)</b></li>
        <li><b>Kcs (KCS)</b></li>
        <li><b>Celo</b></li>
        <li><b>Klaytn</b></li>
        <li><b>Harmony.ONE</b></li>
        <li><b>Binance Smart Chain</b></li>
        </ul>
        This operation needs the private key of the blockchain address. Every time the funds are transferred, the transaction must be signed with the corresponding private key.
        No one should ever send it's own private keys to the internet because there is a strong possibility of stealing keys and loss of funds. In this method, it is possible to enter privateKey
        or signatureId. PrivateKey should be used only for quick development on testnet versions of blockchain when there is no risk of losing funds. In production,
        <a href="https://github.com/tatumio/tatum-kms" target="_blank">Tatum KMS</a> should be used for the highest security standards, and signatureId should be present in the request.
        Alternatively, using the Tatum client library for supported languages.
        </p>
      operationId: AddMultiTokenMinter
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  title: PrivateKey
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - MATIC
                        - KCS
                        - CELO
                        - ONE
                        - KLAY
                        - BSC
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of MultiToken token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    minter:
                      maxLength: 42
                      minLength: 42
                      description: Address of MultiToken minter
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    fromPrivateKey:
                      type: string
                      maxLength: 66
                      example: '0x05e150c73f1920ec14caa1e0b6aa09940899678051a78542840c2668ce5080c2'
                      minLength: 66
                      description: 'Private key of sender address. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                    feeCurrency:
                      type: string
                      description: 'Currency to pay for transaction gas, only valid for CELO chain.'
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - minter
                    - chain
                    - url
                    - contractAddress
                    - fromPrivateKey
                - type: object
                  title: Signature
                  properties:
                    chain:
                      type: string
                      example: ETH
                      description: Chain to work with.
                      enum:
                        - ETH
                        - MATIC
                        - KCS
                        - CELO
                        - KLAY
                        - ONE
                        - BSC
                    contractAddress:
                      maxLength: 42
                      minLength: 42
                      description: Address of MultiToken token
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    minter:
                      maxLength: 42
                      minLength: 42
                      description: Address of MultiToken minter
                      example: '0x687422eEA2cB73B5d3e242bA5456b782919AFc85'
                      type: string
                    index:
                      type: number
                      minimum: 0
                      description: 'If signatureId is mnemonic-based, this is the index to the specific address from that mnemonic.'
                    signatureId:
                      type: string
                      minLength: 36
                      maxLength: 36
                      format: uuid
                      example: 26d3883e-4e17-48b3-a0ee-09a3e484ac83
                      description: 'Identifier of the private key associated in signing application. Private key, or signature Id must be present.'
                    nonce:
                      type: number
                      minimum: 0
                      description: 'Nonce to be set to Ethereum transaction. If not present, last known nonce will be used.'
                    fee:
                      description: 'Custom defined fee. If not present, it will be calculated automatically.'
                      type: object
                      required:
                        - gasLimit
                        - gasPrice
                      properties:
                        gasLimit:
                          type: string
                          description: Gas limit for transaction in gas price.
                          pattern: '^[+]?\d+$'
                          example: '40000'
                        gasPrice:
                          type: string
                          description: Gas price in Gwei.
                          pattern: '^[+]?\d+$'
                          example: '20'
                    feeCurrency:
                      type: string
                      description: 'Currency to pay for transaction gas, only valid for CELO chain.'
                      enum:
                        - CELO
                        - CUSD
                        - CEUR
                  required:
                    - chain
                    - url
                    - contractAddress
                    - minter
                    - signatureId
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: TransactionHashKMS
                    properties:
                      txId:
                        description: TX hash of successful transaction.
                        example: c83f8818db43d9ba4accfe454aa44fc33123d47a4f89d47b314d6748eb0e9bc9
                        type: string
                      failed:
                        description: 'In case of the transaction was broadcast to the blockchain, but it was not possible to complete Tatum KMS signature, reponse is marked as failed and must be marked manually.'
                        example: false
                        type: boolean
                    required:
                      - txId
                  - type: object
                    title: SignatureId
                    properties:
                      signatureId:
                        format: uuid
                        description: 'ID of prepared payment template to sign. This is should be stored on a client side to retrieve ID of the blockchain transaction, when signing application signs the transaction and broadcasts it to the blockchain.'
                        example: 1f7f7c0c-3906-4aa1-9dfe-4b67c43918f6
                        type: string
                    required:
                      - signatureId
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: celo.error
                        example: celo.error
                        type: string
                      message:
                        description: 'Unexpected error occurred. Reason: ${reason}'
                        example: 'Unexpected error occurred. Reason: ${reason}'
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Add Multi Token miter
      tags:
        - Token operations
  '/v3/multitoken/transaction/{chain}/{address}/{tokenAddress}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Multi Token (ERC-1155) transactions by address. This includes incoming and outgoing transactions for the address.</p>
      operationId: MultiTokenGetTransactionByAddress
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - CELO
              - ETH
              - MATIC
            example: CELO
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x8ce4e40889a13971681391aad29e88efaf91f784'
        - description: Token address
          in: path
          name: tokenAddress
          required: true
          schema:
            type: string
            example: '0x1ce4e40889a13971681391aad29e88efaf91f784'
        - description: Max number of items per page is 50.
          in: query
          name: pageSize
          schema:
            type: number
            example: 10
            maximum: 50
            minimum: 1
          required: true
        - description: Offset to obtain next page of the data.
          in: query
          name: offset
          schema:
            type: number
            example: 0
        - description: Transactions from this block onwords will be included.
          in: query
          name: from
          schema:
            type: number
            minimum: 0
            example: 1087623
        - description: Transactions up to this block will be included.
          in: query
          name: to
          schema:
            type: number
            minimum: 0
            example: 1087823
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - type: object
                      properties:
                        blockNumber:
                          type: number
                          example: 6541235
                          description: Block number
                        txId:
                          type: string
                          example: '0x955c1037608c7aecb6d1a3f150ce7d0a80536bcabb0deb69d62f55292cc4c372'
                          description: Transaction ID
                        contractAddress:
                          type: string
                          example: '0x4f54fAD27F7F46C102Cd49b8E75C5593397cd9c3'
                          description: Contract address
                        tokenId:
                          type: string
                          example: '1'
                          description: ID of the token
                        amount:
                          type: string
                          example: '1'
                          description: Amount of tokens transferred.
                        from:
                          type: string
                          example: '0x780c3de0aba1b51f04cfe8a5d9d277d4ad032b8d'
                          description: Sender
                        operator:
                          type: string
                          example: '0x780c3de0aba1b51f04cfe8a5d9d277d4ad032b8d'
                          description: Operator
                        to:
                          type: string
                          example: '0x8cb76aed9c5e336ef961265c6079c14e9cd3d2ea'
                          description: recipient
                      required:
                        - blockNumber
                        - txId
                        - contractAddress
                        - tokenId
                        - from
                        - to
                        - amount
                        - operator
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Multi Token transactions by address
      tags:
        - Get information
  '/v3/multitoken/address/{chain}/{hash}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/>
        <p>Get Multi Token contract address from deploy transaction. This method is deprecated, use <a href="#operation/SCGetContractAddress">Get contract address</a> instead.</p>
      deprecated: true
      operationId: MultiTokenGetContractAddress
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - KCS
              - ONE
              - CELO
              - BSC
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractAddress:
                    type: string
                    description: Address of the Multi Token token.
                    example: '0xc21C81ef03f98898Fb155E00C364e8a7b9D158b8'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Contract address
      tags:
        - Get information
  '/v3/multitoken/transaction/{chain}/{hash}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Multi Token transaction by transaction hash.</p>
      operationId: MultiTokenGetTransaction
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - KCS
              - ONE
              - CELO
              - BSC
        - description: Transaction hash
          in: path
          name: hash
          required: true
          schema:
            type: string
            example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      blockHash:
                        description: Hash of the block where this transaction was in.
                        type: string
                        example: '0xcf2c40f475e78c7c19778e1ae999a0e371c9319b38182ea15dc94536f13f9137'
                      status:
                        type: boolean
                        example: true
                        description: 'TRUE if the transaction was successful, FALSE, if the EVM reverted the transaction.'
                      blockNumber:
                        type: number
                        description: Block number where this transaction was in.
                        example: 6470854
                      from:
                        type: string
                        description: Address of the sender.
                        example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                      gas:
                        type: number
                        description: Gas provided by the sender.
                        example: 21000
                      gasPrice:
                        type: string
                        description: Gas price provided by the sender in wei.
                        example: '1000000000'
                      transactionHash:
                        type: string
                        description: Hash of the transaction.
                        example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
                      input:
                        type: string
                        description: The data sent along with the transaction.
                        example: 0x
                      nonce:
                        type: number
                        description: The number of transactions made by the sender prior to this one.
                        example: 26836405
                      to:
                        type: string
                        description: Address of the receiver. 'null' when its a contract creation transaction.
                        example: '0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d'
                      transactionIndex:
                        type: number
                        description: Integer of the transactions index position in the block.
                        example: 3
                      value:
                        type: string
                        description: Value transferred in wei.
                        example: '1000000000000000000'
                      gasUsed:
                        type: number
                        description: The amount of gas used by this specific transaction alone.
                        example: 21000
                      cumulativeGasUsed:
                        type: number
                        description: The total amount of gas used when this transaction was executed in the block.
                        example: 314159
                      contractAddress:
                        type: string
                        description: 'The contract address created, if the transaction was a contract creation, otherwise null.'
                        example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                      logs:
                        type: array
                        description: 'Log events, that happened in this transaction.'
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              description: From which this event originated from.
                              example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                            topics:
                              type: array
                              description: 'An array with max 4 32 Byte topics, topic 1-3 contains indexed parameters of the log.'
                              items:
                                type: string
                                example: '0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234'
                            data:
                              type: string
                              description: The data containing non-indexed log parameter.
                            logIndex:
                              type: number
                              description: Integer of the event index position in the block.
                            transactionIndex:
                              type: number
                              description: 'Integer of the transaction’s index position, the event was created in.'
                            transactionHash:
                              type: string
                              description: Hash of the transaction this event was created in.
                              example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
                  - type: object
                    properties:
                      blockHash:
                        description: Hash of the block where this transaction was in.
                        type: string
                        example: '0xcf2c40f475e78c7c19778e1ae999a0e371c9319b38182ea15dc94536f13f9137'
                      status:
                        type: boolean
                        example: true
                        description: 'TRUE if the transaction was successful, FALSE, if the EVM reverted the transaction.'
                      blockNumber:
                        type: number
                        description: Block number where this transaction was in.
                        example: 6470854
                      from:
                        type: string
                        description: Address of the sender.
                        example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                      gas:
                        type: number
                        description: Gas provided by the sender.
                        example: 21000
                      gasPrice:
                        type: string
                        description: Gas price provided by the sender in wei.
                        example: '1000000000'
                      transactionHash:
                        type: string
                        description: Hash of the transaction.
                        example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
                      input:
                        type: string
                        description: The data sent along with the transaction.
                        example: 0x
                      nonce:
                        type: number
                        description: The number of transactions made by the sender prior to this one.
                        example: 26836405
                      to:
                        type: string
                        description: Address of the receiver. 'null' when its a contract creation transaction.
                        example: '0xbC546fa1716Ed886967cf73f40e8F2F5e623a92d'
                      transactionIndex:
                        type: number
                        description: Integer of the transactions index position in the block.
                        example: 3
                      value:
                        type: string
                        description: Value transferred in wei.
                        example: '1000000000000000000'
                      gasUsed:
                        type: number
                        description: The amount of gas used by this specific transaction alone.
                        example: 21000
                      cumulativeGasUsed:
                        type: number
                        description: The total amount of gas used when this transaction was executed in the block.
                        example: 314159
                      contractAddress:
                        type: string
                        description: 'The contract address created, if the transaction was a contract creation, otherwise null.'
                        example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                      logs:
                        type: array
                        description: 'Log events, that happened in this transaction.'
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              description: From which this event originated from.
                              example: '0x81b7E08F65Bdf5648606c89998A9CC8164397647'
                            topics:
                              type: array
                              description: 'An array with max 4 32 Byte topics, topic 1-3 contains indexed parameters of the log.'
                              items:
                                type: string
                                example: '0x033456732123ffff2342342dd12342434324234234fd234fd23fd4f23d4234'
                            data:
                              type: string
                              description: The data containing non-indexed log parameter.
                            logIndex:
                              type: number
                              description: Integer of the event index position in the block.
                            transactionIndex:
                              type: number
                              description: 'Integer of the transaction’s index position, the event was created in.'
                            transactionHash:
                              type: string
                              description: Hash of the transaction this event was created in.
                              example: '0xe6e7340394958674cdf8606936d292f565e4ecc476aaa8b258ec8a141f7c75d7'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        description: tx.missing
                        example: tx.missing
                        type: string
                      message:
                        description: No such tx.
                        example: No such tx.
                        type: string
                      statusCode:
                        description: '403'
                        example: 403
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Transaction
      tags:
        - Get information
  '/v3/multitoken/address/balance/{chain}/{address}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Get Multi Tokens on address. Returns all tokenIDs of all contracts this address holds.</p>
      operationId: MultiTokenGetAddressBalance
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - CELO
            example: ETH
        - description: Blockchain address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contractAddress:
                      type: string
                      example: '0x771987a5add0ef1ce303aa069df82dd7f8fbb33b'
                      description: Contract address of the Multi Token
                    balances:
                      type: array
                      items:
                        type: object
                        properties:
                          tokenId:
                            type: string
                            description: Token ID.
                            example: '10'
                          amount:
                            type: string
                            description: Number of tokens held by the address.
                            example: '17'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: celo.error
                    example: celo.error
                    type: string
                  message:
                    description: 'Unexpected error occurred. Reason: ${reason}'
                    example: 'Unexpected error occurred. Reason: ${reason}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Multi Tokens by Address
      tags:
        - Get information
  '/v3/multitoken/balance/{chain}/{contractAddress}/{address}/{tokenId}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Get Multi Tokens on Account. Returns tokenIDs of tokens Account holds.</p>
      operationId: MultiTokenGetBalance
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - KCS
              - ONE
              - CELO
              - KLAY
              - BSC
        - description: Account address
          in: path
          name: address
          required: true
          schema:
            type: string
            example: '0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B'
        - description: Multi Token contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0x94Ce79B9F001E25BBEbE7C01998A78F7B27D1326'
        - description: Multi Token tokenID
          in: path
          name: tokenId
          required: true
          schema:
            type: string
            example: '100'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: Token ID.
                  example: '10'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: celo.error
                    example: celo.error
                    type: string
                  message:
                    description: 'Unexpected error occurred. Reason: ${reason}'
                    example: 'Unexpected error occurred. Reason: ${reason}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Multi Token Account balance
      tags:
        - Get information
  '/v3/multitoken/balance/batch/{chain}/{contractAddress}':
    get:
      description: |
        <h4>1 credit per API call.</h4><br/><p>Get Multi Tokens on Account. Returns tokenIDs of tokens Account holds.</p>
      operationId: MultiTokenGetBalanceBatch
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - KCS
              - ONE
              - CELO
              - KLAY
              - BSC
        - description: Multi Token contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0x94Ce79B9F001E25BBEbE7C01998A78F7B27D1326'
        - description: Comma separated TokenIds to get balance for
          in: query
          name: tokenId
          required: true
          schema:
            type: string
            example: '1,2,3'
        - description: Comma separated addresses to get balance for
          in: query
          name: address
          required: true
          schema:
            type: string
            example: '0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B,0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B,0x3223AEB8404C7525FcAA6C512f91e287AE9FfE7B'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - '10'
                  - '20'
                items:
                  type: string
                  description: Token ID.
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: celo.error
                    example: celo.error
                    type: string
                  message:
                    description: 'Unexpected error occurred. Reason: ${reason}'
                    example: 'Unexpected error occurred. Reason: ${reason}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Multi Token Account balance Batch
      tags:
        - Get information
  '/v3/multitoken/metadata/{chain}/{contractAddress}/{token}':
    get:
      description: <h4>1 credit per API call.</h4><br/><p>Get Multi Token metadata.</p>
      operationId: MultiTokenGetMetadata
      parameters:
        - description: For connection without API key. To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls
          in: query
          name: type
          required: false
          schema:
            type: string
            example: mainnet
            default: testnet
        - description: Blockchain to work with
          in: path
          name: chain
          required: true
          schema:
            type: string
            enum:
              - ETH
              - MATIC
              - KCS
              - ONE
              - CELO
              - KLAY
              - BSC
        - description: Token ID
          in: path
          name: token
          required: true
          schema:
            type: string
            example: '1'
            maxLength: 32
        - description: Multi Token contract address
          in: path
          name: contractAddress
          required: true
          schema:
            type: string
            example: '0x94Ce79B9F001E25BBEbE7C01998A78F7B27D1326'
        - description: Type of testnet. Defaults to ropsten. Valid only for ETH invocations.
          in: header
          name: x-testnet-type
          required: false
          schema:
            default: ethereum-ropsten
            type: string
            enum:
              - ethereum-ropsten
              - ethereum-rinkeby
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    description: Metadata associated with token.
                    example: 'https://my_token_data.com'
          description: OK
        '400':
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    example: validation.failed
                    description: validation.failed
                    type: string
                  message:
                    example: Request validation failed. Please see data for additional information.
                    description: Request validation failed. Please see data for additional information.
                    type: string
                  statusCode:
                    example: 400
                    description: '400'
                    type: number
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - target
                      properties:
                        target:
                          type: object
                          additionalProperties: true
                          description: Request object present in the body of the HTTP request
                          example:
                            property: 12345
                        value:
                          type: number
                          description: 'Value of the target object which validation is wrong. Can be of any data type, example here is using type number.'
                          example: 12345
                        property:
                          type: string
                          description: Property name of the target object which validation is wrong
                          example: property1
                        constraints:
                          type: object
                          additionalProperties: true
                          description: 'Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint.'
                          example:
                            min: property1 must not be less than 50000
                required:
                  - errorCode
                  - message
                  - statusCode
                  - data
                type: object
          description: Bad Request. Validation failed for the given object in the HTTP Body or Request parameters.
        '401':
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      errorCode:
                        example: subscription.not.active
                        description: subscription.not.active
                        type: string
                      message:
                        example: Subscription not active anymore.
                        description: Subscription not active anymore.
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
                  - properties:
                      errorCode:
                        example: subscription.invalid
                        description: subscription.invalid
                        type: string
                      message:
                        example: 'Unable to find valid subscription for ''${apiKey}'''
                        description: 'Unable to find valid subscription for ''${apiKey}'''
                        type: string
                      statusCode:
                        example: 401
                        description: '401'
                        type: number
                    required:
                      - errorCode
                      - message
                      - statusCode
                    type: object
          description: Unauthorized. Not valid or inactive subscription key present in the HTTP Header.
        '403':
          description: 'Forbidden. The request is authenticated, but it is not possible to required perform operation due to logical error or invalid permissions.'
          content:
            application/json:
              schema:
                properties:
                  errorCode:
                    description: celo.error
                    example: celo.error
                    type: string
                  message:
                    description: 'Unexpected error occurred. Reason: ${reason}'
                    example: 'Unexpected error occurred. Reason: ${reason}'
                    type: string
                  statusCode:
                    description: '403'
                    example: 403
                    type: number
                required:
                  - errorCode
                  - message
                  - statusCode
                type: object
        '500':
          content:
            application/json:
              schema:
                properties:
                  message:
                    example: Internal server error
                    description: Internal server error
                    type: string
                  statusCode:
                    example: 500
                    description: '500'
                    type: number
                required:
                  - statusCode
                  - message
                type: object
          description: Internal server error. There was an error on the server during the processing of the request.
      security:
        - X-Api-Key: []
      summary: Get Multi Token Token Metadata
      tags:
        - Get information
components:
  securitySchemes:
    X-Api-Key:
      description: |
        To maintain the highest security level, Tatum requires X-API-Key HTTP header.
        This X-API-Key represents identification of the plan and can be used by 1 developer or per environment.
        Each X-API-Key is bound to the test or production blockchains.

        Connecting without an X-API-Key results in the creation of an API Key tied to your IP Address.
        This API Key is limited to 5req/s and 10M credits, these limits are renewed the 1st day of each month and are applicable to both testnet and mainnet.
        To differentiate between testnet and mainnet, please supply a ?type=testnet|mainnet query parameter with your calls, otherwise the api key will default to mainnet.
        You do not need to supply an API key in the X-API-Key header.
      in: header
      name: x-api-key
      type: apiKey
